@{
    ViewData["Title"] = "Notes";
}
<script>
    function NoteModel(data, allConnections)
    {
        var self = this;
        self.id = data.id;
        self.text = ko.observable(data.text);
        self.text
            .subscribe(function() {
                var temp = toJsWithoutFunctions(self);
                $.ajax({
                    type: "POST",
                    url: "Home/UpdateNote",
                    data: {
                        note: temp
                    },
                    success: function(response) {
                    },
                    dataType: "json"
                });
            });

        self.allConnections = allConnections;

        self.DataConnectedWith = data.connectedWith;

        self.MyComputedConnections = ko.pureComputed(function() {


                return ko.utils.arrayFilter(self.allConnections(), function(conn) {
                    return conn.Source.id == self.id;
                }); 
              
        });
    };

    function ConnectedNotesModel(a, b)
    {
        var self = this;
        self.Source = a;
        self.Destination = b;
    };

    function toJsWithoutFunctions(data) {
        var mapping = {
            'ignore': ["allConnections", "RawViewIsEnabled", "DataConnectedWith", "MyComputedConnections"]
        }
        var model = ko.mapping.toJS(data, mapping);
            for(var x in model) {
                if(typeof(model[x]) === "function") {
                    model[x] = null;
                }
            }
        return model;
    };

    function ConnectedNotesViewModel()
    {
        var self = this;
        
        self.Notes = ko.observableArray([]);
        self.Connections = ko.observableArray([]);
        

        self.RetrieveDataFromServer = function() {
            $.ajax({
                type: "POST",
                url: "Home/RetrieveAllNotes",
                data: {
                    
                },
                success: function(data) {
                    var dictionary = {};
                    var toAdd = ko.utils.arrayMap(data, function(elem) {
                        dictionary[elem.id] = new NoteModel(elem, self.Connections);
                        return dictionary[elem.id];
                    });
                    ko.utils.arrayPushAll(self.Notes, toAdd);

                    $.each(self.Notes(), function(index, value) {
                        var valueConnections = ko.utils.arrayMap(value.DataConnectedWith, function(elem) {
                            var Destination = dictionary[elem.id];
                            return new ConnectedNotesModel(value, Destination);
                        });
                        ko.utils.arrayPushAll(self.Connections, valueConnections );

                    });

                },
                dataType: "json"
            });

        };

        self.connectFrom = ko.observable(null);

        self.CreateNote = function() {
            $.ajax({
                type: "POST",
                url: "Home/CreateNote",
                success: function(data) {
                    var toAdd = new NoteModel(data, self.Connections);
                    self.Notes.push(toAdd);

                },
                dataType: "json"
            });
        };

        self.SelectFrom = function(data) {
            self.connectFrom(data);
        };

        self.CancelSelectFrom = function() {
            self.connectFrom(null);
        };

        self.ConnectNotes = function(data) {
            $.ajax({
                type: "POST",
                url: "Home/ConnectNotes",
                data: {
                    from: toJsWithoutFunctions(self.connectFrom),
                    to: toJsWithoutFunctions(data)
                },
                success: function(response) {
                    self.Connections.push(new ConnectedNotesModel(self.connectFrom(), data));
                    self.connectFrom(null);

                },
                dataType: "json"
            });
        };

        

    };

    $(document).ready(function()
    {
        var viewModel = new ConnectedNotesViewModel();
        ko.applyBindings(viewModel);
        viewModel.RetrieveDataFromServer();
    });
</script>
<script type="text/html" id="note-template">
    <li>
        <span data-bind="if: $root.connectFrom() != null && $root.connectFrom().id != id">
            <button data-bind="click: $root.ConnectNotes" >To</button>
        </span>
        <span data-bind="if: $root.connectFrom() != null && $root.connectFrom().id == id">
            <span>From</span>
        </span>
        <span>
            <input data-bind="value: text, valueUpdate: 'keypress keyup'"></input>
            <ul>
                <!-- ko foreach: MyComputedConnections -->
                    <li>
                        <span> => </span>
                        <span data-bind="text: Destination.text"></span>
                    </li>
                <!-- /ko -->
                <li>
                    <span data-bind="if: $root.connectFrom() != null && $root.connectFrom().id == id">
                        <button data-bind="click: $root.CancelSelectFrom">Cancel</button>    
                    </span>
                    <span data-bind="if: $root.connectFrom() == null">
                        <button data-bind="click: $root.SelectFrom" >Connect</button>
                    </span>
                    <span data-bind="if: $root.connectFrom() != null && $root.connectFrom().id != id">
                        <button data-bind="click: $root.SelectFrom" >Change From</button>
                    </span>
                </li>
            </ul>
        </span>
    </li>
</script>
<div>
        <ul data-bind="template: {name: 'note-template', foreach: Notes} ">
        </ul>
        <br>
        <button data-bind="click: $root.CreateNote">Create note</button>
</div>